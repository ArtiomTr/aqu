{
	"requiredField": "${path} is required - ${path} was not found in package.json, config file or cli arguments",
	"requiredInputField": "${path} is required - \"source\" field not found in package.json, attempt to select the default ./src/index or ./lib/index also failed",
	"unexpectedlyMissingField": "${path} is missing - suddenly, default value of ${path} is not load. This is probably aqu issue, please report about it.",
	"gracefulShutdownMessage": "✨ Shutting down gracefully",
	"gracefulShutdownDetails": "   Stopping esbuild service and closing watcher",
	"configNotFound": "Cannot read config at path ${path}",
	"packageNotFound": "package.json not not found (could miss some configuration options)",
	"outfileCannotBeSpecified": "Cannot specify outfile because more than one entrypoint will be generated",
	"cannotSpecifyMultipleEntrypoints": "Cannot use mixed cjsMode with multiple entrypoints. Please use 1 entrypoint or switch to other cjsMode.",
	"noOutputPathSpecified": "No output path specified.",
	"schemaValidationError": "Schema validation failed:",
	"compilationStart": "Compilation started.",
	"compilationSuccess": "Successfully compiled!",
	"compilationFailed": "Errors during compilation",
	"watchIdle": "⌚ Waiting for changes...",
	"notNumberError": "Specified argument for ${path} - \"${value}\" is not number",
	"noLintDirsSpecifiedError": "No directories specified. Defaulting to \"aqu lint ${dirs}\" (entrypoint directories + test dir)",
	"lintSuccess": "Successful lint",
	"maxWarningsError": "Received ${warningCount} warnings, which is more than specified threshold - ${maxWarnings}. Exiting with code 1.",
	"licenseNotFound": "License ${license} do not exist",
	"templateLoadLoop": "During \"${template}\" template load loop found: ${loop}",
	"creationOptionNotSpecfied": "${path} is not specified.",
	"creationOptionInvalid": "${value} is not valid ${path}",
	"packageNameNotSpecified": "Package name is not specified.",
	"packageNameInvalid": "Package name ${name} is invalid",
	"folderAlreadyExists": "Folder ${path} already exists",
	"requiredCli": "Please enter the value",
	"skipped": "skipped",
	"notValidUrl": "${value} is not valid URL.",
	"pickCommandToEject": "Pick command to eject",
	"pickCommandToRevert": "Pick command to revert",
	"cannotEject": "Cannot eject command ${command}",
	"cannotRevert": "Cannot revert command ${command}",
	"ejectWarn": "Ejecting ${script} script will result in functionality loss - no declarations will be generated. Continue?",
	"ejectPackageScriptWarn": "Found custom script in package.json - ${oldScript}. Do you want to replace it to ${newScript}?",
	"revertWarning": "Reverting ${script} will revert ${packageScript} script in package.json and delete these files: ${files}. Continue?",
	"noPackageManagersFound": "No package managers found. (none of ${available} currently installed on this machine)",
	"unknownPackageManager": "Unknown package manager ${manager} found",
	"pickPackageManager": "Pick package manager:",
	"fileExistsWarning": "File ${path} already exists. Do you want to override it?",
	"steps": {
		"esbuild": "Bundling using esbuild",
		"dtsBundle": "Generating declaration bundle",
		"dtsStandard": "Emitting declarations",
		"creating": "Creating ${package} using ${template} template...",
		"creationSuccess": "Created ${package}",
		"creationFail": "Create ${package}",
		"skipInstallDeps": "Install dependencies",
		"installingDeps": "Installing dependencies...",
		"installDepsSuccess": "Dependencies intalled",
		"installDepsFail": "Install dependencies",
		"creationFinalize": "\nPackage ${package} successfully created\n\nHappy coding!"
	},
	"additionalHelp": "\n✨ Found a bug? Or want to add new feature? Let us know! ${link}\n   Let's make ${package} better together!",
	"commands": {
		"watch": "Watch project and rebuild on every change",
		"build": "Bundle project using esbuild",
		"test": "Run jest. (passes all rest cli arguments into jest)",
		"lint": "Lint using eslint",
		"create": "Create new package",
		"eject": "Eject command. (if you want to do additional customizations)",
		"revert": "Revert command eject. (will revert do initial command)"
	},
	"options": {
		"watchdir": "Specify custom watching directories",
		"nosym": "do not follow symlinks",
		"ignore": "Specify paths which will be ignored while watching",
		"config": "Specify path to configuration",
		"maxWarnings": "Number of warnings to trigger nonzero exit code. Default: infinity",
		"fix": "Automatically fix problems",
		"fixDryRun": "Automatically fix problems without saving the changes to the file system",
		"cache": "Only check changed files. Default: false",
		"cacheLocation": "Path to the cache file or directory",
		"reportFile": "Specify file to write report to",
		"description": "Specify custom package description",
		"author": "Set package author",
		"repo": "Specify package repository",
		"license": "Pick package license. Default: MIT",
		"template": "Pick package template. Default: typescript",
		"yes": "Yes to all - Pick all default options",
		"name": "Specify custom package name",
		"input": "Entrypoints to your file. By default, will pick index file in src or lib folder",
		"outdir": "Output directory of your build",
		"outfile": "Output file of your bundle",
		"format": "Output format. Available options: esm, cjs and iife. Default: esm and cjs",
		"cjsMode": "CommonJS module generation mode. Available options: development, production and mixed. Default: mixed.",
		"declaration": "Algorithm to emit declarations. Available options: none, normal and bundle. Default: bundle",
		"tsconfig": "Path to tsconfig. Default: tsconfig.json in current working directory.",
		"incremental": "Build incrementally. Default: true",
		"noExternal": "Should include node_modules packages into bundle? Default: false",
		"noCleanup": "Do not delete output folder before build"
	},
	"createQuestions": {
		"name": "Package name:",
		"description": "Specify package description:",
		"author": "Package author:",
		"repo": "Git repository (only for package.json information):",
		"license": "Pick license:",
		"template": "Pick template:"
	}
}
